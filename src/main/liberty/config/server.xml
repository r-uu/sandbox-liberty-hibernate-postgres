<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<server description="sandbox-liberty-hibernate-postgres">

	<!-- Enable features -->
	<featureManager>
<!-- 		<feature>jakartaee-9.1</feature> -->
<!-- 		<feature>microProfile-5.0</feature> -->

		<feature>bells-1.0</feature>
		<feature>cdi-3.0</feature>
		<feature>jsonp-2.0</feature>
		<feature>jsonb-2.0</feature>
		<feature>persistence-3.0</feature>
		<feature>restfulWS-3.0</feature>
		<feature>mpConfig-3.0</feature>
		<feature>mpOpenAPI-3.0</feature>
		<feature>mpRestClient-3.0</feature>
	</featureManager>

	<!-- define variables and their values -->
	<variable name="default.http.port"
	          defaultValue="9080" />
	<variable name="default.https.port"
	          defaultValue="9443" />
	<variable name="driver.folder.postgres"
	          value="${user.home}/.m2/repository/org/postgresql/postgresql/42.2.23" />
	<variable name="driver.file.postgres"
	          value="postgresql-42.2.23.jar" />
	<variable name="jar.folder.hibernate"
	          value="${user.home}/.m2/repository/org/hibernate/hibernate-core-jakarta/5.5.6.Final" />
	<variable name="jar.file.hibernate"
	          value="hibernate-core-jakarta-5.5.6.Final.jar" />
	<variable name="project.name"
	          value="sandbox-liberty-hibernate-postgres" />
	<variable name="dir.project"
	          value="${user.home}/develop/git/${project.name}" />

	<!-- This template enables security. To get the full use of all the capabilities, 
	     a keystore and user registry are required. -->

	<!-- For the keystore, default keys are generated and stored in a keystore. 
	     To provide the keystore password, generate an encoded password using bin/securityUtility 
	     encode and add it below in the password attribute of the keyStore element. 
	     Then uncomment the keyStore element. -->
	<!-- <keyStore password=""/> -->

	<!-- For a user registry configuration, configure your user registry. For 
	     example, configure a basic user registry using the basicRegistry element. 
	     Specify your own user name below in the name attribute of the user element. 
	     For the password, generate an encoded password using bin/securityUtility 
	     encode and add it in the password attribute of the user element. Then uncomment 
	     the user element. -->
	<basicRegistry id="basic"
	               realm="BasicRealm">
		<!-- <user name="yourUserName" password="" /> -->
	</basicRegistry>

	<!-- <remoteFileAccess> -->
<!-- 		<writeDir>${server.config.dir}</writeDir> -->
	<!-- </remoteFileAccess> -->

	<!-- To access this server from a remote client add a host attribute to 
	     the following element, e.g. host="*" -->
	<httpEndpoint id="defaultHttpEndpoint"
	              httpPort="9080"
	              httpsPort="9443" />

	<dataSource id="PostgresDS"
	            jndiName="jdbc/taggable-data-source"
	            jdbcDriverRef="postgresql-driver"
	            type="javax.sql.ConnectionPoolDataSource"
	            transactional="true">

		<properties serverName="localhost"
		            portNumber="5432"
		            databaseName="taggable"
		            user="postgres"
		            password="postgres" />
	</dataSource>

	<jdbcDriver id="postgresql-driver"
	            jakarta.sql.XADataSource="org.postgresql.xa.PGXADataSource"
	            jakarta.sql.ConnectionPoolDataSource="org.postgresql.ds.PGConnectionPoolDataSource"
	            libraryRef="postgresql-driver-library" />

	<library id="postgresql-driver-library">
		<fileset id="PostgreSQLFileset"
		         dir="${driver.folder.postgres}"
		         includes="${driver.file.postgres}" />
	</library>

	<!-- Automatically expand WAR files and EAR files -->
	<applicationManager autoExpand="true" />

	<!-- Configures the application on a specified context root -->
	<webApplication location="sandbox-liberty-hibernate-postgres.war"
	                contextRoot="/" />

	<!-- Default SSL configuration enables trust for default certificates from 
	     the Java runtime -->
	<ssl id="defaultSSLConfig"
	     trustDefaultCerts="true" />
</server>